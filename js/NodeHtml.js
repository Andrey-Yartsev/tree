// Generated by CoffeeScript 1.11.1
(function() {
  var NodeHtml;

  NodeHtml = (function() {
    function NodeHtml(node, parentElement) {
      var state;
      this.node = node;
      this.li = document.createElement('li');
      parentElement.appendChild(this.li);
      this.li.appendChild(document.createElement('i'));
      this.span = document.createElement('span');
      this.span.id = this.node.id;
      this.span.innerHTML = this.node.data.name + '(' + this.node.id + ')';
      this.li.appendChild(this.span);
      this.ul = document.createElement('ul');
      this.li.appendChild(this.ul);
      this.updateClass();
      state = this.node.getOpened();
      if (state !== null && state === false) {
        this.ul.style.display = 'none';
      }
      this.initControls();
      this.span.addEventListener('click', (function() {
        return this.toggle();
      }).bind(this));
    }

    NodeHtml.prototype.initControls = function() {
      var controls;
      controls = document.createElement('div');
      controls.className = 'controls';
      this.li.appendChild(controls);
      this.btnEdit = document.createElement('a');
      this.btnEdit.href = '#';
      this.btnEdit.innerHTML = 'edit';
      controls.appendChild(this.btnEdit);
      this.btnEdit.addEventListener('click', (function(e) {
        e.preventDefault();
        return this.editAction();
      }).bind(this));
      this.btnCreate = document.createElement('a');
      this.btnCreate.href = '#';
      this.btnCreate.innerHTML = 'create';
      controls.appendChild(this.btnCreate);
      this.btnCreate.addEventListener('click', (function(e) {
        e.preventDefault();
        return this.createAction();
      }).bind(this));
      if (this.node.parentNode) {
        this.btnDelete = document.createElement('a');
        this.btnDelete.href = '#';
        this.btnDelete.innerHTML = 'delete';
        controls.appendChild(this.btnDelete);
        return this.btnDelete.addEventListener('click', (function(e) {
          e.preventDefault();
          return this.deleteAction();
        }).bind(this));
      }
    };

    NodeHtml.prototype.updateClass = function() {
      var className;
      className = '';
      if (this.node.children.length) {
        className += 'hasChildren';
      }
      if (this.node.getOpened()) {
        className += ' opened';
      }
      return this.li.className = className.trim();
    };

    NodeHtml.prototype.toggle = function() {
      if (this.node.data.opened) {
        this.node.data.opened = false;
        this.ul.style.display = 'none';
      } else {
        this.node.data.opened = true;
        this.ul.style.display = 'block';
      }
      this.updateClass();
      return this.node.fireChangeEvent();
    };

    NodeHtml.prototype.editAction = function() {
      var newName;
      newName = prompt('Edit node name', this.node.data.name);
      if (newName && newName !== this.node.data.name) {
        this.node.updateName(newName);
        return this.span.innerHTML = newName;
      }
    };

    NodeHtml.prototype.createAction = function() {
      var newName;
      newName = prompt('Enter new node name');
      if (!newName) {
        return;
      }
      new NodeHtml(this.node.createChild(newName), this.ul);
      return this.node.tree.html();
    };

    NodeHtml.prototype.deleteAction = function() {
      if (this.li.parentNode) {
        this.li.parentNode.removeChild(this.li);
      }
      this.node["delete"]();
      return this.node.tree.html();
    };

    return NodeHtml;

  })();

  window.NodeHtml = NodeHtml;

}).call(this);

//# sourceMappingURL=NodeHtml.js.map
